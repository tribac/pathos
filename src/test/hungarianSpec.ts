const MAX = 1000000;
const unweightedMatrix = [
[216,108,MAX,144,90,MAX,162,126,108,198,126,90,144,144,MAX,108,108,108,108,144,162],//0
[216,108,MAX,144,90,MAX,162,126,108,198,126,90,144,144,MAX,108,108,108,108,144,162],//1
[MAX,MAX,8,MAX,MAX,MAX,MAX,14,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],//2
[48,MAX,MAX,MAX,MAX,16,MAX,MAX,MAX,MAX,MAX,MAX,32,32,MAX,MAX,MAX,MAX,MAX,MAX,MAX],//3
[MAX,MAX,MAX,MAX,20,MAX,MAX,28,MAX,MAX,MAX,MAX,MAX,MAX,8,MAX,MAX,24,MAX,MAX,MAX],//4
[MAX,MAX,8,MAX,MAX,MAX,MAX,14,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],//5
[MAX,MAX,8,MAX,MAX,MAX,MAX,14,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],//6
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,11,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],//7
[48,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,44,MAX,MAX,MAX,MAX,MAX,MAX,24,MAX,MAX,MAX,36],//8
[60,MAX,MAX,40,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,30,MAX,40,45],//9
[MAX,MAX,MAX,MAX,10,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,12,MAX,MAX,MAX],//10
[72,36,MAX,48,MAX,MAX,MAX,MAX,MAX,66,42,MAX,MAX,48,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[72,36,MAX,48,MAX,MAX,MAX,MAX,MAX,66,42,MAX,MAX,48,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,24,MAX,MAX,MAX,MAX,MAX,33,21,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,24,MAX,MAX,MAX,MAX,MAX,33,21,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,27,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,18,MAX,MAX,MAX,24,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,27,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,18,MAX,MAX,MAX,24,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,12,MAX,MAX,MAX,MAX,MAX,MAX,12,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,27,MAX,18,MAX,MAX,15,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,27,MAX,18,MAX,MAX,15,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[72,MAX,MAX,MAX,MAX,MAX,54,MAX,MAX,MAX,MAX,MAX,48,48,MAX,MAX,MAX,MAX,36,MAX,54],
[60,MAX,MAX,MAX,MAX,MAX,45,MAX,MAX,MAX,MAX,MAX,40,40,MAX,MAX,MAX,MAX,MAX,MAX,45],
[MAX,6,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[36,MAX,MAX,MAX,MAX,12,MAX,MAX,MAX,MAX,MAX,MAX,24,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[36,MAX,MAX,MAX,MAX,12,MAX,MAX,MAX,MAX,MAX,MAX,24,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,55,MAX,MAX,MAX,MAX,MAX,MAX,30,MAX,30,40,45],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,55,MAX,MAX,MAX,MAX,MAX,MAX,30,MAX,30,40,45],
[252,126,84,168,105,84,189,147,126,231,147,105,168,168,42,126,126,126,126,168,189],
];
const weightedMatrix = [
[1638,882,1008,1008,756,882,1260,1008,882,1512,1008,756,1134,1134,630,1008,882,882,882,1134,1260],
[1638,882,1008,1008,756,882,1260,1008,882,1512,1008,756,1134,1134,630,1008,882,882,882,1134,1260],
[MAX,MAX,16,MAX,MAX,MAX,MAX,16,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[104,MAX,MAX,MAX,MAX,56,MAX,MAX,MAX,MAX,MAX,MAX,72,36,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,80,MAX,60,MAX,MAX,80,MAX,MAX,MAX,MAX,MAX,MAX,25,MAX,MAX,70,MAX,MAX,MAX],
[MAX,MAX,16,MAX,MAX,MAX,MAX,16,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,16,MAX,MAX,MAX,MAX,16,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,12,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[156,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,144,MAX,MAX,MAX,MAX,MAX,MAX,28,MAX,MAX,MAX,40],
[208,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,84,MAX,72,80],
[MAX,MAX,MAX,MAX,12,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,14,MAX,MAX,MAX],
[390,84,MAX,96,MAX,MAX,MAX,MAX,MAX,288,96,MAX,MAX,162,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[390,84,MAX,96,MAX,MAX,MAX,MAX,MAX,288,96,MAX,MAX,162,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,24,MAX,MAX,MAX,MAX,MAX,72,24,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,24,MAX,MAX,MAX,MAX,MAX,72,24,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,30,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,48,MAX,MAX,MAX,27,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,30,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,24,MAX,MAX,MAX,27,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,14,MAX,MAX,MAX,MAX,MAX,MAX,16,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,30,MAX,21,MAX,MAX,18,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,30,MAX,21,MAX,MAX,18,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[390,MAX,MAX,MAX,MAX,MAX,120,MAX,MAX,MAX,MAX,MAX,216,216,MAX,MAX,MAX,MAX,42,MAX,180],
[260,MAX,MAX,MAX,MAX,MAX,100,MAX,MAX,MAX,MAX,MAX,135,90,MAX,MAX,MAX,MAX,MAX,MAX,100],
[MAX,7,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[39,MAX,MAX,MAX,MAX,21,MAX,MAX,MAX,MAX,MAX,MAX,27,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[39,MAX,MAX,MAX,MAX,21,MAX,MAX,MAX,MAX,MAX,MAX,27,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,8,MAX,MAX,MAX,MAX,MAX],
[1911,1029,1176,1176,882,1029,1470,1176,1029,1764,1176,882,1323,1323,735,1176,1029,1029,1029,1323,1470],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,180,MAX,MAX,MAX,MAX,MAX,MAX,70,MAX,35,90,100],
[MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,MAX,180,MAX,MAX,MAX,MAX,MAX,MAX,70,MAX,35,90,100],
[1911,1029,1176,1176,882,1029,1470,1176,1029,1764,1176,882,1323,1323,735,1176,1029,1029,1029,1323,1470],    
];
const specialists = [
'AB','AM','AMT','BN','CL','DB','DTT','FB','FG','GA','GS','KR','LG','LMS','MH','ML','OG','PR','PS','RA','RH'
];

const specialties = [
'CONGEL 1','CONGEL 2','CONGEL NEURO','MOHS','AUTOPSIE','NEUROPATHOLOGIE','NEUROPATHOLOGIE AUTOPSIE','OPHTLMOPATHOLOGIE','PATHOLOGIE TÊTE ET COU','PATHOLOGIE THORACIQUE','PATHOLOGIE CARDIOVASCULAIRE','PATHOLOGIE GASTROINTESTINALE BX','PATHOLOGIE GASTROINTESTINALE CHX','PATHOLOGIE HÉPATIQUE BX','PATHOLOGIE HÉPATOBILAIRE ET PANCRÉATIQUE CHX','PATHOLOGIE GÉNITOURINAIRE BX','PATHOLOGIE GÉNITOURINAIRE CHX','PATHOLOGIE RÉNALE BX','PATHOLOGIE GYNÉCOLOGIQUE BX','PATHOLOGIE GYNÉCOLOGIQUE CHX','PATHOLOGIE MAMMAIRE BX','PATHOLOGIE MAMMAIRE CHX','HÉMATOPATHOLOGIE','DERMATOPATHOLOGIE BX','DERMATOPATHOLOGIE CHX','PATHOLOGIE ENDOCRINIENNE','PATHOLOGIE DES TISSUS MOUS ET OS','CYTOLOGIE 1','CYTOLOGIE 2','AUTRE'
];

describe('Hungarian', function() {
    const munkres = require('munkres-js');
    const hungarian = require('hungarian-on3');

    const matrix = weightedMatrix;

    before(function() {
        console.log('specialistes count', specialists.length);
        console.log('specialties count', specialties.length);
    });

    [munkres, hungarian].forEach(function(algorithm) {
        describe(`${algorithm.name}`, function() {
            it('count of specialists by task X count of specialties of specialist', function() {
                let results = algorithm(matrix);
                console.log('result', results.length, results);
                let i = -1;
                let otherSpecialties: string[] = [];
                let otherMatrix: number[][] = [];
                let totalCost = 0;
                results.forEach((item: number[]) => {
                    i++;
                    if (item[1] === -1) {
                        otherMatrix.push(matrix[i]);
                        otherSpecialties.push(specialties[i]);
                        return;
                    }
                    console.log(i, item, specialties[item[0]], specialists[item[1]], `(${matrix[i][item[i], item[1]]})`);
                    totalCost += matrix[i][item[i], item[1]];
                });

                console.log('others', otherSpecialties.length, otherMatrix.length);

                let otherResults = algorithm(otherMatrix);
                console.log('otherResults', otherResults.length, otherResults);
                i = -1;
                otherResults.forEach((item: number[]) => {
                    console.log(++i, item, otherSpecialties[item[0]], specialists[item[1]], `(${otherMatrix[i][item[i], item[1]]})`);
                    totalCost += matrix[i][item[i], item[1]];
                });

                console.log('totalCost', totalCost)
            });
        });
    });
});
